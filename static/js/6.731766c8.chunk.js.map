{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","src","img","style","display","width","height","objectFit","margin","alt","useMarvelServices","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","a","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComic","getCharacterByName","name","_transformCharacterByName","char","description","thumbnail","path","extension","comics","title","pageCount","language","textObjects","price","prices","slice","homepage","urls","wiki","items","AppBanner","className","avengers","avengersLogo","ComicsList","setComics","newItemLoading","setNewItemLoading","setOffset","itemLoaded","setItemLoaded","useEffect","onRequest","initial","then","onAllComicsLoaded","comicsData","loaded","length","listItems","dataComics","elements","i","CSSTransition","timeout","classNames","to","TransitionGroup","component","comicsItems","sniper","Spinner","errorMessage","disabled","onClick","ComicsPage"],"mappings":"iGAAe,UAA0B,kC,OCkB1BA,IAhBM,WACnB,OACE,qBACEC,IAAKC,EACLC,MAAO,CACLC,QAAS,QACTC,MAAO,QACPC,OAAQ,QACRC,UAAW,QACXC,OAAQ,UAEVC,IAAI,Y,yECiFKC,IA5FW,WACxB,MCDqB,WACrB,MAA8BC,oBAAS,GAAM,mBAAtCC,EAAO,KAAEC,EAAU,KAC1B,EAA0BF,mBAAS,MAAK,mBAAjCG,EAAK,KAAEC,EAAQ,KAmCtB,MAAO,CAAEH,UAASE,QAAOE,QAjCTC,sBAAW,uCACzB,WACEC,GAAG,2FAKc,OAJjBC,EAAM,+BAAG,MACTC,EAAI,+BAAG,KACPC,EAAO,+BAAG,CAAE,eAAgB,oBAE5BR,GAAW,GAAM,kBAGQS,MAAMJ,EAAK,CAAEC,SAAQC,OAAMC,YAAW,KAAD,EAA9C,IAARE,EAAQ,QAEAC,GAAG,CAAD,sBACR,IAAIC,MAAM,mBAAD,OAAoBP,EAAG,qBAAaK,EAASG,SAAU,KAAD,oBAGpDH,EAASI,OAAO,KAAD,GAEhB,OAFZC,EAAI,OAEVf,GAAW,GAAO,kBACXe,GAAI,QAGS,MAHT,0BAEXf,GAAW,GACXE,EAAS,KAAEc,SAAS,+DAGvB,mDAzBwB,GA0BzB,IAOgCC,WAJfb,uBAAY,WAC7BF,EAAS,QACR,KDlC6CgB,GAAxCnB,EAAO,EAAPA,QAASE,EAAK,EAALA,MAAOE,EAAO,EAAPA,QAASc,EAAU,EAAVA,WAE3BE,EAAW,4CACXC,EAAU,0CAGVC,EAAgB,uCAAG,0CAAAC,EAAA,sDAAuB,OAAhBC,EAAM,+BAFtB,MAEgC,SAC5BpB,EAAQ,GAAD,OACpBgB,EAAQ,qCAA6BI,EAAM,YAAIH,IAClD,KAAD,EAFQ,OAAHI,EAAG,yBAIFA,EAAIT,KAAKU,QAAQC,IAAIC,IAAoB,2CACjD,kBANqB,mCAQhBC,EAAY,uCAAG,WAAOC,GAAE,uFACV1B,EAAQ,GAAD,OAAIgB,EAAQ,sBAAcU,EAAE,YAAIT,IAAW,KAAD,EAA1D,OAAHI,EAAG,yBAEFG,EAAoBH,EAAIT,KAAKU,QAAQ,KAAG,2CAChD,gBAJiB,sCAMZK,EAAY,uCAAG,0CAAAR,EAAA,sDAAiB,OAAVC,EAAM,+BAAG,EAAC,SAClBpB,EAAQ,GAAD,OACpBgB,EAAQ,kCAA0BI,EAAM,YAAIH,IAC/C,KAAD,EAFQ,OAAHI,EAAG,yBAGFA,EAAIT,KAAKU,QAAQC,IAAIK,IAAiB,2CAC9C,kBALiB,mCAOZC,EAAQ,uCAAG,WAAOH,GAAE,uFACN1B,EAAQ,GAAD,OAAIgB,EAAQ,kBAAUU,EAAE,YAAIT,IAAW,KAAD,EAAtD,OAAHI,EAAG,yBAEFO,EAAiBP,EAAIT,KAAKU,QAAQ,KAAG,2CAC7C,gBAJa,sCAMRQ,EAAkB,uCAAG,WAAOC,GAAI,uFAClB/B,EAAQ,GAAD,OAAIgB,EAAQ,2BAAmBe,EAAI,YAAId,IAAW,KAAD,EAAjE,OAAHI,EAAG,yBAEFW,EAA0BX,EAAIT,KAAKU,QAAQ,KAAG,2CACtD,gBAJuB,sCAMlBU,EAA4B,SAACC,GACjC,OAAIA,EACK,CACLF,KAAME,EAAKF,KACXG,YAAaD,EAAKC,aAAe,iBACjCC,UAAWF,EAAKE,UAAUC,KAAO,IAAMH,EAAKE,UAAUE,WAGjD,CACLvC,MAAO,iCAKP8B,EAAmB,SAACU,GACxB,MAAO,CACLZ,GAAIY,EAAOZ,GACXK,KAAMO,EAAOC,MACbL,YAAaI,EAAOJ,aAAe,iBACnCM,UAAWF,EAAOE,WAAa,2CAC/BL,UAAWG,EAAOH,UAAUC,KAAO,IAAME,EAAOH,UAAUE,UAC1DI,SAAUH,EAAOI,YAAYD,UAAY,QACzCE,MAAOL,EAAOM,OAAO,GAAGD,QAItBnB,EAAsB,SAACS,GAC3B,MAAO,CACLP,GAAIO,EAAKP,GACTK,KAAME,EAAKF,KACXG,YAAaD,EAAKC,YACdD,EAAKC,YAAYW,MAAM,EAAG,KAAO,MACjC,2BACJV,UAAWF,EAAKE,UAAUC,KAAO,IAAMH,EAAKE,UAAUE,UACtDS,SAAUb,EAAKc,KAAK,GAAG7C,IACvB8C,KAAMf,EAAKc,KAAK,GAAG7C,IACnBoC,OAAQL,EAAKK,OAAOW,QAIxB,MAAO,CACLrD,UACAE,QACAoB,mBACAO,eACAE,eACAE,WACAC,qBACAhB,gB,kIE1FW,G,MAAA,IAA0B,sCCA1B,MAA0B,0C,OCiB1BoC,EAbG,WACd,OACI,sBAAKC,UAAU,cAAa,UACxB,qBAAKlE,IAAKmE,EAAU3D,IAAI,aACxB,sBAAK0D,UAAU,mBAAkB,UAAC,yBACR,uBAAK,iBAG/B,qBAAKlE,IAAKoE,EAAc5D,IAAI,sB,wBCwEzB6D,G,MA1EI,WACjB,MAA4B3D,mBAAS,IAAG,mBAAjC2C,EAAM,KAAEiB,EAAS,KACxB,EAA4C5D,oBAAS,GAAM,mBAApD6D,EAAc,KAAEC,EAAiB,KACxC,EAA4B9D,mBAAS,GAAE,mBAAhCyB,EAAM,KAAEsC,EAAS,KACxB,EAAoC/D,oBAAS,GAAM,mBAA5CgE,EAAU,KAAEC,EAAa,KAEhC,EAAyClE,cAAjCE,EAAO,EAAPA,QAASE,EAAK,EAALA,MAAO6B,EAAY,EAAZA,aAExBkC,qBAAU,WACRC,EAAU1C,GAAQ,KACjB,IAEH,IAAM0C,EAAY,SAAC1C,EAAQ2C,GACfN,GAAVM,GACApC,EAAaP,GAAQ4C,KAAKC,IAGtBA,EAAoB,SAACC,GACzB,IAAIC,GAAS,EACTD,EAAWE,OAAS,IACtBD,GAAS,GAEXZ,GAAU,SAACjB,GAAM,4BAASA,GAAM,YAAK4B,OACrCR,GAAU,SAACtC,GAAM,OAAKA,EAAS,KAC/BqC,GAAkB,GAClBG,EAAcO,IAyBVE,EAtBc,SAACC,GACnB,IAAMC,EAAWD,EAAW/C,KAAI,WAAiCiD,GAAO,IAArC9C,EAAE,EAAFA,GAAIS,EAAS,EAATA,UAAWJ,EAAI,EAAJA,KAAMY,EAAK,EAALA,MACtD,OACE,cAAC8B,EAAA,EAAa,CAACC,QAAS,IAAKC,WAAW,eAAc,SACpD,oBAAIxB,UAAU,eAAc,SAC1B,eAAC,IAAI,CAACyB,GAAE,UAAKlD,GAAK,UAChB,qBAAKzC,IAAKkD,EAAW1C,IAAKsC,EAAMoB,UAAU,qBAC1C,qBAAKA,UAAU,oBAAmB,SAAEpB,IACpC,sBAAKoB,UAAU,qBAAoB,UAAER,EAAM,aALWjB,MAYhE,OACE,oBAAIyB,UAAU,eAAc,SAC1B,cAAC0B,EAAA,EAAe,CAACC,UAAW,KAAK,SAAEP,MAKvBQ,CAAYzC,GACxB0C,EAASpF,IAAY4D,EAAiB,cAACyB,EAAA,EAAO,IAAM,KACpDC,EAAepF,EAAQ,cAACd,EAAA,EAAY,IAAM,KAEhD,OACE,qCACE,cAAC,EAAS,IACV,sBAAKmE,UAAU,eAAc,UAC1B6B,EACAE,EACAb,EACD,wBACElB,UAAU,mCACVgC,SAAU3B,EACV4B,QAAS,kBAAMtB,EAAU1C,IACzBjC,MAAO,CAAEC,QAASuE,EAAa,OAAS,SAAU,SAElD,qBAAKR,UAAU,QAAO,SAAC,wBCvElBkC,UAJI,WACjB,OAAO,cAAC,EAAU","file":"static/js/6.731766c8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img\r\n      src={img}\r\n      style={{\r\n        display: 'block',\r\n        width: '250px',\r\n        height: '250px',\r\n        objectFit: 'cover',\r\n        margin: '0 auto',\r\n      }}\r\n      alt=\"Error\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import { useHttp } from '../hooks/http.hook';\r\n\r\nconst useMarvelServices = () => {\r\n  const { loading, error, request, clearError } = useHttp();\r\n\r\n  const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  const _apiKey = 'apikey=d5d684a06d58da256b5a00a75e3c5ddf';\r\n  const _offset = '210';\r\n\r\n  const getAllCharacters = async (offset = _offset) => {\r\n    const res = await request(\r\n      `${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\r\n    );\r\n\r\n    return res.data.results.map(_transformCharacter);\r\n  };\r\n\r\n  const getCharacter = async (id) => {\r\n    const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n    return _transformCharacter(res.data.results[0]);\r\n  };\r\n\r\n  const getAllComics = async (offset = 0) => {\r\n    const res = await request(\r\n      `${_apiBase}/comics?limit=8&offset=${offset}&${_apiKey}`\r\n    );\r\n    return res.data.results.map(_transformComics);\r\n  };\r\n\r\n  const getComic = async (id) => {\r\n    const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\r\n    return _transformComics(res.data.results[0]);\r\n  };\r\n\r\n  const getCharacterByName = async (name) => {\r\n    const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\r\n    return _transformCharacterByName(res.data.results[0]);\r\n  };\r\n\r\n  const _transformCharacterByName = (char) => {\r\n    if (char) {\r\n      return {\r\n        name: char.name,\r\n        description: char.description || 'No description',\r\n        thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      };\r\n    } else {\r\n      return {\r\n        error: 'The character was not found.',\r\n      };\r\n    }\r\n  };\r\n\r\n  const _transformComics = (comics) => {\r\n    return {\r\n      id: comics.id,\r\n      name: comics.title,\r\n      description: comics.description || 'No description',\r\n      pageCount: comics.pageCount || 'No information about the number of pages',\r\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n      language: comics.textObjects.language || 'en-us',\r\n      price: comics.prices[0].price,\r\n    };\r\n  };\r\n\r\n  const _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description\r\n        ? char.description.slice(0, 210) + '...'\r\n        : 'Sorry, no character data',\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    };\r\n  };\r\n\r\n  return {\r\n    loading,\r\n    error,\r\n    getAllCharacters,\r\n    getCharacter,\r\n    getAllComics,\r\n    getComic,\r\n    getCharacterByName,\r\n    clearError,\r\n  };\r\n};\r\n\r\nexport default useMarvelServices;\r\n","import { useState, useCallback } from 'react';\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (\r\n      url,\r\n      method = 'GET',\r\n      body = null,\r\n      headers = { 'Content-Type': 'application/json' }\r\n    ) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const response = await fetch(url, { method, body, headers });\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n\r\n        setLoading(false);\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n        setError(e.message);\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  return { loading, error, request, clearError };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport AppBanner from '../appBanner/AppBanner';\r\nimport useMarvelServices from '../../services/MarvelService';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst ComicsList = () => {\r\n  const [comics, setComics] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [offset, setOffset] = useState(0);\r\n  const [itemLoaded, setItemLoaded] = useState(false);\r\n\r\n  const { loading, error, getAllComics } = useMarvelServices();\r\n\r\n  useEffect(() => {\r\n    onRequest(offset, true);\r\n  }, []);\r\n\r\n  const onRequest = (offset, initial) => {\r\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\r\n    getAllComics(offset).then(onAllComicsLoaded);\r\n  };\r\n\r\n  const onAllComicsLoaded = (comicsData) => {\r\n    let loaded = false;\r\n    if (comicsData.length < 8) {\r\n      loaded = true;\r\n    }\r\n    setComics((comics) => [...comics, ...comicsData]);\r\n    setOffset((offset) => offset + 8);\r\n    setNewItemLoading(false);\r\n    setItemLoaded(loaded);\r\n  };\r\n\r\n  const comicsItems = (dataComics) => {\r\n    const elements = dataComics.map(({ id, thumbnail, name, price }, i) => {\r\n      return (\r\n        <CSSTransition timeout={400} classNames=\"comics__item\" key={id}>\r\n          <li className=\"comics__item\">\r\n            <Link to={`${id}`}>\r\n              <img src={thumbnail} alt={name} className=\"comics__item-img\" />\r\n              <div className=\"comics__item-name\">{name}</div>\r\n              <div className=\"comics__item-price\">{price}$</div>\r\n            </Link>\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <ul className=\"comics__grid\">\r\n        <TransitionGroup component={null}>{elements}</TransitionGroup>\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  const listItems = comicsItems(comics);\r\n  const sniper = loading && !newItemLoading ? <Spinner /> : null;\r\n  const errorMessage = error ? <ErrorMessage /> : null;\r\n\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <div className=\"comics__list\">\r\n        {sniper}\r\n        {errorMessage}\r\n        {listItems}\r\n        <button\r\n          className=\"button button__main button__long\"\r\n          disabled={newItemLoading}\r\n          onClick={() => onRequest(offset)}\r\n          style={{ display: itemLoaded ? 'none' : 'block' }}\r\n        >\r\n          <div className=\"inner\">load more</div>\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import ComicsList from '../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n  return <ComicsList />;\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"sourceRoot":""}